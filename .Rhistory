parseTweets(tweets="C:\Users\nilesh.patil\Documents\R Projects\Twitter\Nexus\\4.json",simplify = FALSE, verbose = TRUE)->a
parseTweets(tweets="C:\\Users\\nilesh.patil\\Documents\\R Projects\\Twitter\\Nexus\\4.json",simplify = FALSE, verbose = TRUE)->a
install.packages("mvtnorm")
library("streamR", lib.loc="C:/Program Files/R-3.0.1/library")
parseTweets(tweets="C:\\Users\\nilesh.patil\\Documents\\R Projects\\Twitter\\Nexus\\4.json",simplify = FALSE, verbose = TRUE)->a
View(a)
summary(factors(a$lang))
summary(factor(a$lang))
z<-a[a$in_reply_to_status_id==verified]
z<-a[a$in_reply_to_status_id=="verified"]
z<-a[in_reply_to_status_id=="verified"]
z<-a[,a$in_reply_to_status_id=="verified"]
`1` <- read.delim("~/R Projects/Twitter/Nexus/1.txt")
View(`1`)
att <- read.delim("~/R Projects/Twitter/Nexus/1.txt")
View(`1`)
x<-c(1:6)
yc(5:10)
y<-c(5:10)
rbind(x,y)
class(rbind(x,y))
install.packages(c("evaluate", "forecast", "knitr"))
installed.packages()
installed.packages()->A
View(A)
?attributes
a<-matrix(c(1:10),2,5)
View(a)
a<-matrix(1:10,2,5)
View(a)
a<-matrix(1:10,2)
View(a)
installed.packages()
hw2 <- read.delim("~/GitHub/Coursera-Statistics-One--R/Week 2/Stats1.13.HW.02.txt")
View(hw2)
nrows(hw2)
attach(hw2)
mean(SR)
var(SR)
mean(SR[tim=="pre"])
mean(SR[time=="pre"])
levels(time)
sd(SR[time=="post"])
median
median(SR[time=="post"])
summary(hw2)
sum(time=="pre")
hw2[time=="pre",]->pre
hw2[time=="post",]->post
View(pre)
View(post)
colnames(post)
rownames(post)
rownames(post)->1:48
rownames(post)<-1:48
View(post)
post$condition<-factor(post$subject)
summary(post$SR)
summary(post)
post$condition<-factor(post$condition)
View(post)
hw2[time=="post",]->post
post$condition<-factor(post$condition)
View(post)
rownames(post)<-1:48
View(post)
summary(post)
detach(hw2)
attach(post)
mean(SR[condition=="WM"])
mean(SR[condition=="PE"])
mean(SR[condition=="WM"])
SR[condition=="WM"]
SR[condition=="PE"]
mean(SR[condition=="DS"])
comparison<-function(df1,df2){}
comparison<-function(df1,df2){
factors(df1$condition)->f1
}
comparison<-function(df1,df2){
factors(df1$condition)->f1
factors(df2$condition)->f2
for(i in f1){
mean(df1$SR[df1$condition==i])
}
comparison(pre,post)
factors(post)
factors(post$condition)
comparison<-function(df1,df2){
as.factors(df1$condition)->f1
as.factors(df2$condition)->f2
for(i in f1){
mean(df1$SR[df1$condition==i])
}
comparison(pre,post)
comparison<-function(df1,df2){
unique(df1$condition)->f1
unique(df2$condition)->f2
for(i in f1){
mean(df1$SR[df1$condition==i])
}
comparison(pre,post)
comparison<-function(df1,df2){
unique(df1$condition)->f1
unique(df2$condition)->f2
for(i in f1){
mean(df1$SR[df1$condition==i])->m1
print(m1)
}
comparison(pre,post)
comparison<-function(df1,df2){
unique(df1$condition)->f1
unique(df2$condition)->f2
for(i in f1){
mean(df1$SR[df1$condition==i])->m1
cbind(i,m1)->result
}
comparison(pre,post)
comparison<-function(df1,df2){
unique(df1$condition)->f1
unique(df2$condition)->f2
for(i in f1){
mean(df1$SR[df1$condition==i])->m1
cbind(i,m1)->result
print(result)
}
comparison(pre,post)
data.frame(a)
data.frame(condition,mean)->a
data.frame(condition(0),mean(0))->a
as.data.frame(condition(0),mean(0))->a
as.data.frame(condition=0,mean=0)->a
data.frame(condition=0,mean=0)->a
View(a)
comparison<-function(df1,df2){
unique(df1$condition)->f1
unique(df2$condition)->f2
data.frame(condition=0,mean=0)->a
for(i in f1){
mean(df1$SR[df1$condition==i])->m1
cbind(i,m1)->q
rbind(a,q)
}
for(i in f2){
mean(df2$SR[df1$condition==i])->m2
cbind(i,m2)->q
rbind(a,q)
}
print(a)
}
comparison(pre,post)
q()
2
exit
exit()
q()
comparison<-function(df1,df2){
unique(df1$condition)->f1
unique(df2$condition)->f2
data.frame(condition=0,mean=0)->a
for(i in f1){
mean(df1$SR[df1$condition==i])->m1
cbind(i,m1)->q
rbind(a,q)
}
for(i in f2){
mean(df2$SR[df2$condition==i])->m2
cbind(i,m2)->q
rbind(a,q)
}
print(a)
}
comparison(pre,post)
unique(df1$condition)->f1
unique(df2$condition)->f2
data.frame(condition=0,mean=0)->a
for(i in f1){
mean(df1$SR[df1$condition==i])->m1
cbind(i,m1)->q
rbind(a,q)
}
unique(df1$condition)->f1
comparison<-function(df1,df2){
unique(df1$condition)->f1
unique(df2$condition)->f2
data.frame(condition=0,mean=0)->a
for(i in f1){
mean(df1$SR[df1$condition==i])->m1
cbind(i,m1)->q
rbind(a,q)
}
for(i in f2){
mean(df2$SR[df2$condition==i])->m2
cbind(i,m2)->q
rbind(a,q)
}
print(a)
}
comparison(pre,post)
comparison<-function(df1){
unique(df1$condition)->f1
data.frame(condition=0,mean=0)->a
for(i in f1){
mean(df1$SR[df1$condition==i])->m1
cbind(i,m1)->q
rbind(a,q)
}
print(a)
}
comparison(pre,post)
comparison(pre)
comparison<-function(pre){
unique(pre$condition)->f1
data.frame(condition=0,mean=0)->a
for(i in f1){
mean(df1$SR[df1$condition==i])->m1
cbind(i,m1)->q
rbind(a,q)
}
print(a)
}
comparison(pre)
comparison<-function(pre){
unique(pre$condition)->f1
data.frame(condition=0,mean=0)->a
for(i in f1){
mean(pre$SR[pre$condition==i])->m1
cbind(i,m1)->q
rbind(a,q)
}
print(a)
}
comparison(pre)
unique(pre$condition)->f1
data.frame(condition=0,mean=0)->a
for(i in f1){
mean(pre$SR[pre$condition==i])->m1
cbind(i,m1)->q
rbind(a,q)
}
for(i in f1){
mean(pre$SR[pre$condition==i])->m1
cbind(i,m1)->q
rbind(a,q)
}
i in f1
for (i in f1){
print(i)
}
for (i in f1){
mean(pre$SR[pre$condition==i])->m1
print(m1)
}
comparison<-function(post){
unique(post$condition)->f1
data.frame(condition=0,mean=0)->a
for(i in f1){
mean(post$SR[post$condition==i])->m1
cbind(i,m1)->q
rbind(a,q)
}
print(a)
}
unique(post$condition)->f1
data.frame(condition=0,mean=0)->a
for (i in f1){
mean(pre$SR[pre$condition==i])->m1
print(m1)
}
for (i in f1){
mean(ppost$SR[post$condition==i])->m1
print(i,m1)
}
for (i in f1){
mean(post$SR[post$condition==i])->m1
print(i,m1)
}
for (i in f1){
mean(post$SR[post$condition==i])->m1
print(m1)
}
hw3 <- read.delim("~/GitHub/Coursera-Statistics-One--R/Week 3/Stats1.13.HW.03.txt")
View(hw3)
attach(hw3)
cor(S1.pre,S2.pre)
cor(V1.pre,V2.pre)
